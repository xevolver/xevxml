<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<SgSourceFile filename="f_11of11tips.f90" format="2" language="4">
  <SgGlobal>
    <SgModuleStatement tag_name="glob" type="1">
      <SgClassDefinition tag_name="glob">
        <SgVariableDeclaration modifier="ALLOCATABLE">
          <SgInitializedName name="x">
              <SgArrayType index="" rank="1" type="SgTypeFloat">
                <SgTypeFloat/>
                <SgSubscriptExpression>
                  <SgNullExpression/>
                  <SgNullExpression/>
                  <SgIntVal value="1"/>
                </SgSubscriptExpression>
              </SgArrayType>
          </SgInitializedName>
        </SgVariableDeclaration>
        <SgContainsStatement/>
        <SgProcedureHeaderStatement name="sub" subprogram_kind="2">
            <SgTypeVoid/>
          <SgFunctionParameterList>
            <SgInitializedName name="y">
                <SgArrayType index="" rank="1" type="SgTypeFloat">
                  <SgTypeFloat/>
                  <SgSubscriptExpression>
                    <SgNullExpression/>
                    <SgNullExpression/>
                    <SgIntVal value="1"/>
                  </SgSubscriptExpression>
                </SgArrayType>
            </SgInitializedName>
          </SgFunctionParameterList>
          <SgFunctionDefinition>
            <SgBasicBlock>
              <SgVariableDeclaration>
                <SgInitializedName name="y">
                    <SgArrayType index="" rank="1" type="SgTypeFloat">
                      <SgTypeFloat/>
                      <SgSubscriptExpression>
                        <SgNullExpression/>
                        <SgNullExpression/>
                        <SgIntVal value="1"/>
                      </SgSubscriptExpression>
                    </SgArrayType>
                </SgInitializedName>
              </SgVariableDeclaration>
              <SgPragmaDeclaration>
                <SgPragma pragma="xev dir add(acc, present_or_copy(y) present_or_copyin(x)">
                  <DIRECTIVE name="dir">
		                  <CLAUSE name="add">
                      <LI value="acc"/>
                      <LI value="present_or_copy(y"/>
                    </CLAUSE>
	                </DIRECTIVE>
                  <DIRECTIVE name="dir">
		                  <CLAUSE name="replace">
			                  <LI value="default replace-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>                <DIRECTIVE name="dir">
		                  <CLAUSE name="del">
			                  <LI value="default del"/>
		</CLAUSE>
	</DIRECTIVE>              </SgPragma>
              </SgPragmaDeclaration>
              <SgPragmaDeclaration>
                <SgPragma pragma="xev dir del(delete)">
                  <DIRECTIVE name="dir">
		                  <CLAUSE name="add">
			                  <LI value="default dir-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>                <DIRECTIVE name="dir">
		                  <CLAUSE name="replace">
			                  <LI value="default replace-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>                <DIRECTIVE name="dir">
		                  <CLAUSE name="del">
                      <LI value="delete"/>
                    </CLAUSE>
	                </DIRECTIVE>
                </SgPragma>
              </SgPragmaDeclaration>
              <SgPragmaDeclaration>
                <SgPragma pragma="xev dir del(delete)">
                  <DIRECTIVE name="dir">
		                  <CLAUSE name="add">
			                  <LI value="default dir-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>                <DIRECTIVE name="dir">
		                  <CLAUSE name="replace">
			                  <LI value="default replace-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>                <DIRECTIVE name="dir">
		                  <CLAUSE name="del">
                      <LI value="delete"/>
                    </CLAUSE>
	                </DIRECTIVE>
                </SgPragma>
              </SgPragmaDeclaration>
              <SgFortranDo end="1" nlabel="" slabel="" style="0">
                <SgAssignOp>
                  <SgVarRefExp name="i"/>
                  <SgIntVal value="1"/>
                </SgAssignOp>
                <SgFunctionCallExp>
                  <SgFunctionRefExp symbol="ubound"/>
                  <SgExprListExp>
                    <SgVarRefExp name="y"/>
                    <SgIntVal value="1"/>
                  </SgExprListExp>
                </SgFunctionCallExp>
                <SgNullExpression/>
                <SgBasicBlock>
                  <SgExprStatement>
                    <SgAssignOp>
                      <SgPntrArrRefExp>
                        <SgVarRefExp name="y"/>
                        <SgExprListExp>
                          <SgVarRefExp name="i"/>
                        </SgExprListExp>
                      </SgPntrArrRefExp>
                      <SgAddOp>
                        <SgPntrArrRefExp>
                          <SgVarRefExp name="y"/>
                          <SgExprListExp>
                            <SgVarRefExp name="i"/>
                          </SgExprListExp>
                        </SgPntrArrRefExp>
                        <SgPntrArrRefExp>
                          <SgVarRefExp name="x"/>
                          <SgExprListExp>
                            <SgVarRefExp name="i"/>
                          </SgExprListExp>
                        </SgPntrArrRefExp>
                      </SgAddOp>
                    </SgAssignOp>
                  </SgExprStatement>
                </SgBasicBlock>
                <PreprocessingInfo pos="2" type="3">
!$xev dir add(acc, present_or_copy(y) present_or_copyin(x)
</PreprocessingInfo>
                <PreprocessingInfo pos="2" type="3">
!$xev dir del(delete)
</PreprocessingInfo>
                <PreprocessingInfo pos="2" type="3">
!$acc declare present(y,x)
</PreprocessingInfo>
                <PreprocessingInfo pos="2" type="3">
!$xev dir del(delete)
</PreprocessingInfo>
                <PreprocessingInfo pos="2" type="3">
!$acc kernels
</PreprocessingInfo>
              </SgFortranDo>
              <PreprocessingInfo pos="4" type="3">
!$acc end kernels
</PreprocessingInfo>
            </SgBasicBlock>
          </SgFunctionDefinition>
          <SgInitializedName name="sub">
              <SgTypeVoid/>
          </SgInitializedName>
        </SgProcedureHeaderStatement>
      </SgClassDefinition>
    </SgModuleStatement>
    <SgPragmaDeclaration>
      <SgPragma pragma="xev parameter add(zz)">
        <DIRECTIVE name="parameter">
		        <CLAUSE name="add">
            <LI value="zz"/>
          </CLAUSE>
	      </DIRECTIVE>
      </SgPragma>
    </SgPragmaDeclaration>
    <SgProcedureHeaderStatement name="roo" subprogram_kind="2">
        <SgTypeVoid/>
      <SgFunctionParameterList>
        <SgPragmaDeclaration>
          <SgPragma pragma="xev parameter add(zz)">
            <DIRECTIVE name="parameter">
		            <CLAUSE name="add">
                <LI value="zz"/>
              </CLAUSE>
	          </DIRECTIVE>
          </SgPragma>
        </SgPragmaDeclaration>
        <SgInitializedName name="z">
            <SgArrayType index="" rank="1" type="SgTypeFloat">
              <SgTypeFloat/>
              <SgSubscriptExpression>
                <SgNullExpression/>
                <SgNullExpression/>
                <SgIntVal value="1"/>
              </SgSubscriptExpression>
            </SgArrayType>
          <PreprocessingInfo pos="2" type="3">
!$xev parameter add(zz)
</PreprocessingInfo>
        </SgInitializedName>
      </SgFunctionParameterList>
      <SgFunctionDefinition>
        <SgBasicBlock>
          <SgUseStatement name="glob"/>
          <SgVariableDeclaration>
            <SgPragmaDeclaration>
              <SgPragma pragma="xev parameter add(zz)">
                <DIRECTIVE name="parameter">
		                <CLAUSE name="add">
                    <LI value="zz"/>
                  </CLAUSE>
	              </DIRECTIVE>
              </SgPragma>
            </SgPragmaDeclaration>
            <SgInitializedName name="z">
                <SgArrayType index="" rank="1" type="SgTypeFloat">
                  <SgTypeFloat/>
                  <SgSubscriptExpression>
                    <SgNullExpression/>
                    <SgNullExpression/>
                    <SgIntVal value="1"/>
                  </SgSubscriptExpression>
                </SgArrayType>
              <PreprocessingInfo pos="2" type="3">
!$xev parameter add(zz)
</PreprocessingInfo>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev function-call copy-001(zz)">
              <DIRECTIVE name="function-call">
		              <CLAUSE name="copy-001">
                  <LI value="zz"/>
                </CLAUSE>
	            </DIRECTIVE>
            </SgPragma>
          </SgPragmaDeclaration>
          <SgExprStatement>
            <SgFunctionCallExp>
              <SgFunctionRefExp symbol="sub"/>
              <SgExprListExp>
                <SgVarRefExp name="z"/>
              </SgExprListExp>
            </SgFunctionCallExp>
            <PreprocessingInfo pos="2" type="3">
!$acc data copy(z) copyin(x)
</PreprocessingInfo>
            <PreprocessingInfo pos="2" type="3">
!$xev function-call copy-001(zz)
</PreprocessingInfo>
          </SgExprStatement>
          <PreprocessingInfo pos="4" type="3">
!$acc end data region
</PreprocessingInfo>
        </SgBasicBlock>
      </SgFunctionDefinition>
      <SgInitializedName name="roo">
          <SgTypeVoid/>
      </SgInitializedName>
      <PreprocessingInfo pos="2" type="3">
!$xev parameter add(zz)
</PreprocessingInfo>
    </SgProcedureHeaderStatement>
  </SgGlobal>

</SgSourceFile>
