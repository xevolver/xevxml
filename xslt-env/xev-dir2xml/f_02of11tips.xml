<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<SgSourceFile filename="f_02of11tips.f90" format="2" language="4">
  <SgGlobal>
    <SgProcedureHeaderStatement name="TEST02" subprogram_kind="2">
        <SgTypeVoid/>
      <SgFunctionParameterList/>
      <SgFunctionDefinition>
        <SgBasicBlock>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev var-type-chg ptn-001(SgArrayType,1,SgTypeInt)">
              <DIRECTIVE name="var-type-chg">
		              <CLAUSE name="ptn-001">
                  <LI value="SgArrayType"/>
                  <LI value="1"/>
                  <LI value="SgTypeInt"/>
                </CLAUSE>
	            </DIRECTIVE>
            </SgPragma>
          </SgPragmaDeclaration>
          <SgVariableDeclaration>
            <SgInitializedName name="found">
                <SgTypeInt/>
            </SgInitializedName>
            <PreprocessingInfo pos="2" type="3">
    !$xev var-type-chg ptn-001(SgArrayType,1,SgTypeInt)
</PreprocessingInfo>
          </SgVariableDeclaration>
          <SgVariableDeclaration>
            <SgInitializedName name="i">
                <SgTypeInt/>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgVariableDeclaration>
            <SgInitializedName name="A">
                <SgArrayType index="" rank="1" type="SgTypeInt">
                  <SgTypeInt/>
                  <SgIntVal value="300"/>
                </SgArrayType>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev dir replace(acc, kernels, loop)">
              <DIRECTIVE name="dir">
		              <CLAUSE name="add">
			              <LI value="default dir-add 2130"/>
		</CLAUSE>
	</DIRECTIVE>            <DIRECTIVE name="dir">
		              <CLAUSE name="replace">
                  <LI value="acc"/>
                  <LI value="kernels"/>
                  <LI value="loop"/>
                </CLAUSE>
	            </DIRECTIVE>
              <DIRECTIVE name="dir">
		              <CLAUSE name="del">
			              <LI value="default del"/>
		</CLAUSE>
	</DIRECTIVE>          </SgPragma>
          </SgPragmaDeclaration>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev statement-del ptn-001">
              <DIRECTIVE name="statement-del">
		              <CLAUSE name="ptn-001">
			              <LI value="default statement-del"/>
		</CLAUSE>
	</DIRECTIVE>          </SgPragma>
          </SgPragmaDeclaration>
          <SgExprStatement>
            <SgAssignOp>
              <SgVarRefExp name="i"/>
              <SgIntVal value="0"/>
            </SgAssignOp>
            <PreprocessingInfo pos="2" type="3">
    !$xev dir replace(acc, kernels, loop)
</PreprocessingInfo>
            <PreprocessingInfo pos="2" type="3">
    !$acc kernels
</PreprocessingInfo>
            <PreprocessingInfo pos="2" type="3">
    !$xev statement-del ptn-001
</PreprocessingInfo>
          </SgExprStatement>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev whilestmt-chg ptn-001(do)">
              <DIRECTIVE name="whilestmt-chg">
		              <CLAUSE name="ptn-001">
                  <LI value="do"/>
                </CLAUSE>
	            </DIRECTIVE>
            </SgPragma>
          </SgPragmaDeclaration>
          <SgWhileStmt>
            <SgExprStatement>
              <SgNotOp mode="0">
                <SgEqualityOp>
                  <SgVarRefExp name="found"/>
                  <SgIntVal value="300"/>
                </SgEqualityOp>
              </SgNotOp>
            </SgExprStatement>
            <SgBasicBlock>
              <SgExprStatement>
                <SgAssignOp>
                  <SgVarRefExp name="i"/>
                  <SgAddOp>
                    <SgVarRefExp name="i"/>
                    <SgIntVal value="1"/>
                  </SgAddOp>
                </SgAssignOp>
              </SgExprStatement>
              <SgIfStmt>
                <SgExprStatement>
                  <SgEqualityOp>
                    <SgPntrArrRefExp>
                      <SgVarRefExp name="A"/>
                      <SgExprListExp>
                        <SgVarRefExp name="i"/>
                      </SgExprListExp>
                    </SgPntrArrRefExp>
                    <SgIntVal value="102"/>
                  </SgEqualityOp>
                </SgExprStatement>
                <SgBasicBlock>
                  <SgExprStatement>
                    <SgAssignOp>
                      <SgVarRefExp name="found"/>
                      <SgVarRefExp name="i"/>
                    </SgAssignOp>
                  </SgExprStatement>
                </SgBasicBlock>
                <SgBasicBlock/>
              </SgIfStmt>
            </SgBasicBlock>
            <PreprocessingInfo pos="2" type="3">
    !$xev whilestmt-chg ptn-001(do)
</PreprocessingInfo>
          </SgWhileStmt>
          <SgPragmaDeclaration>
            <SgPragma pragma="xev statement-add ptn-001(print,*,'Found_at',maxval(found) )">
              <DIRECTIVE name="statement-add">
		              <CLAUSE name="ptn-000">
			              <LI value="default statement-add"/>
		</CLAUSE>
	</DIRECTIVE>            <DIRECTIVE name="statement-add">
		              <CLAUSE name="ptn-001">
                  <LI value="print"/>
                  <LI value="*"/>
                  <LI value="'Found_at'"/>
                  <LI value="maxval(found"/>
                </CLAUSE>
	            </DIRECTIVE>
            </SgPragma>
          </SgPragmaDeclaration>
          <SgReturnStmt>
            <SgNullExpression/>
            <PreprocessingInfo pos="2" type="3">
    !$acc end region
</PreprocessingInfo>
            <PreprocessingInfo pos="2" type="3">
    !$xev statement-add ptn-001(print,*,'Found_at',maxval(found) )
</PreprocessingInfo>
          </SgReturnStmt>
        </SgBasicBlock>
      </SgFunctionDefinition>
      <SgInitializedName name="TEST02">
          <SgTypeVoid/>
      </SgInitializedName>
    </SgProcedureHeaderStatement>
  </SgGlobal>

</SgSourceFile>
