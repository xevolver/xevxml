<?xml version="1.0" encoding="UTF-8"?><SgSourceFile filename="f_02of11tips.f90" format="2" language="4">
  <SgGlobal>
    <SgProcedureHeaderStatement name="TEST02" subprogram_kind="2">
        <SgTypeVoid/>
      <SgFunctionParameterList/>
      <SgFunctionDefinition>
        <SgBasicBlock>
          <SgVariableDeclaration>
            <SgInitializedName name="found">
                <SgTypeInt/>
            </SgInitializedName><SgInitializedName name="found_tmp"><SgArrayType index="&quot;&quot;" rank="1" type="SgTypeInt"><SgTypeInt/><SgVarRefExp name="300"/></SgArrayType></SgInitializedName>
          </SgVariableDeclaration>
          <SgVariableDeclaration>
            <SgInitializedName name="i">
                <SgTypeInt/>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgVariableDeclaration>
            <SgInitializedName name="A">
                <SgArrayType index="" rank="1" type="SgTypeInt">
                  <SgTypeInt/>
                  <SgIntVal value="300"/>
                </SgArrayType>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgPragmaDeclaration><SgPragma pragma="acc kernels loop "/></SgPragmaDeclaration>
          <!--
					SgPragmaDeclaration statement remove
				-->
          <!--
					remove statement
				-->
          <SgFortranDo xmlns:exslt="http://exslt.org/common" end="1" nlabel="" slabel="" style="0"><SgAssignOp><SgVarRefExp name="i"/><SgIntVal value="1"/></SgAssignOp><SgVarRefExp name="300"/><SgNullExpression/><SgBasicBlock><SgExprStatement><SgAssignOp><SgPntrArrRefExp><SgVarRefExp name="found_tmp"/><SgExprListExp><SgVarRefExp name="i"/></SgExprListExp></SgPntrArrRefExp><SgIntVal value="0"/></SgAssignOp></SgExprStatement></SgBasicBlock></SgFortranDo>
          <!--
					SgPragmaDeclaration while2do replace
				-->
          <SgFortranDo end="1" nlabel="" slabel=""><SgAssignOp><SgVarRefExp name="i"/><SgVarRefExp name="1"/></SgAssignOp><SgVarRefExp name="300"/><SgNullExpression xmlns:exslt="http://exslt.org/common"/><SgBasicBlock>
              <!--
					SgPragmaDeclaration statement remove
				-->
              <!--
					remove statement
				-->
              <SgIfStmt>
                <SgExprStatement>
                  <SgEqualityOp>
                    <SgPntrArrRefExp>
                      <SgVarRefExp name="A"/>
                      <SgExprListExp>
                        <SgVarRefExp name="i"/>
                      </SgExprListExp>
                    </SgPntrArrRefExp>
                    <SgIntVal value="102"/>
                  </SgEqualityOp>
                </SgExprStatement>
                <SgBasicBlock>
                  <SgExprStatement>
                    <SgAssignOp>
                      <SgPntrArrRefExp><SgVarRefExp name="found_tmp"/><SgExprListExp><SgVarRefExp name="i"/></SgExprListExp></SgPntrArrRefExp>
                      <SgVarRefExp name="i"/>
                    </SgAssignOp>
                  </SgExprStatement>
                </SgBasicBlock>
                <SgBasicBlock/>
              </SgIfStmt>
            </SgBasicBlock></SgFortranDo>
          <!--
					SgPragmaDeclaration end xxxx
				-->
          <SgReturnStmt>
            <SgNullExpression/>
            <!--
					remove PreprocessingInfo
				-->
            <PreprocessingInfo pos="2" type="3">
    !$acc end kernels
</PreprocessingInfo>
            <PreprocessingInfo pos="2" type="3">
    !print *,'Found at',maxval(found)
</PreprocessingInfo>
          </SgReturnStmt>
        </SgBasicBlock>
      </SgFunctionDefinition>
      <SgInitializedName name="TEST02">
          <SgTypeVoid/>
      </SgInitializedName>
    </SgProcedureHeaderStatement>
  </SgGlobal>

</SgSourceFile>