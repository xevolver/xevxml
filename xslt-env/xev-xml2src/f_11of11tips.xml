<?xml version="1.0" encoding="UTF-8"?><SgSourceFile filename="f_11of11tips.f90" format="2" language="4">
  <SgGlobal>
    <SgModuleStatement tag_name="glob" type="1">
      <SgClassDefinition tag_name="glob">
        <SgVariableDeclaration modifier="ALLOCATABLE">
          <SgInitializedName name="x">
              <SgArrayType index="" rank="1" type="SgTypeFloat">
                <SgTypeFloat/>
                <SgSubscriptExpression>
                  <SgNullExpression/>
                  <SgNullExpression/>
                  <SgIntVal value="1"/>
                </SgSubscriptExpression>
              </SgArrayType>
          </SgInitializedName>
        </SgVariableDeclaration>
        <SgContainsStatement/>
        <SgProcedureHeaderStatement name="sub" subprogram_kind="2">
            <SgTypeVoid/>
          <SgFunctionParameterList>
            <SgInitializedName name="y">
                <SgArrayType index="" rank="1" type="SgTypeFloat">
                  <SgTypeFloat/>
                  <SgSubscriptExpression>
                    <SgNullExpression/>
                    <SgNullExpression/>
                    <SgIntVal value="1"/>
                  </SgSubscriptExpression>
                </SgArrayType>
            </SgInitializedName>
          </SgFunctionParameterList>
          <SgFunctionDefinition>
            <SgBasicBlock>
              <SgVariableDeclaration>
                <SgInitializedName name="y">
                    <SgArrayType index="" rank="1" type="SgTypeFloat">
                      <SgTypeFloat/>
                      <SgSubscriptExpression>
                        <SgNullExpression/>
                        <SgNullExpression/>
                        <SgIntVal value="1"/>
                      </SgSubscriptExpression>
                    </SgArrayType>
                </SgInitializedName>
              </SgVariableDeclaration>
              <SgPragmaDeclaration><SgPragma pragma="acc kernels present_or_copy(y) present_or_copyin(x) "/></SgPragmaDeclaration>
              <!--
					SgPragmaDeclaration
				-->
              <SgFortranDo end="1" nlabel="" slabel="" style="0">
                <SgAssignOp>
                  <SgVarRefExp name="i"/>
                  <SgIntVal value="1"/>
                </SgAssignOp>
                <SgFunctionCallExp>
                  <SgFunctionRefExp subprogram_kind="1" symbol="ubound"/>
                  <SgExprListExp>
                    <SgVarRefExp name="y"/>
                    <SgIntVal value="1"/>
                  </SgExprListExp>
                </SgFunctionCallExp>
                <SgNullExpression/>
                <SgBasicBlock>
                  <SgExprStatement>
                    <SgAssignOp>
                      <SgPntrArrRefExp>
                        <SgVarRefExp name="y"/>
                        <SgExprListExp>
                          <SgVarRefExp name="i"/>
                        </SgExprListExp>
                      </SgPntrArrRefExp>
                      <SgAddOp>
                        <SgPntrArrRefExp>
                          <SgVarRefExp name="y"/>
                          <SgExprListExp>
                            <SgVarRefExp name="i"/>
                          </SgExprListExp>
                        </SgPntrArrRefExp>
                        <SgPntrArrRefExp>
                          <SgVarRefExp name="x"/>
                          <SgExprListExp>
                            <SgVarRefExp name="i"/>
                          </SgExprListExp>
                        </SgPntrArrRefExp>
                      </SgAddOp>
                    </SgAssignOp>
                  </SgExprStatement>
                </SgBasicBlock>
                <!--
					remove PreprocessingInfo
				-->
                <!--
					remove PreprocessingInfo
				-->
                <!--
					remove PreprocessingInfo
				-->
                <!--
					remove PreprocessingInfo
				-->
              </SgFortranDo>
              <PreprocessingInfo pos="4" type="3">
!$acc end kernels
</PreprocessingInfo>
            </SgBasicBlock>
          </SgFunctionDefinition>
          <SgInitializedName name="sub">
              <SgTypeVoid/>
          </SgInitializedName>
        </SgProcedureHeaderStatement>
      </SgClassDefinition>
    </SgModuleStatement>
    <SgProcedureHeaderStatement name="roo" subprogram_kind="2">
        <SgTypeVoid/>
      <SgFunctionParameterList>
        <SgInitializedName name="z">
            <SgArrayType index="" rank="1" type="SgTypeFloat">
              <SgTypeFloat/>
              <SgSubscriptExpression>
                <SgNullExpression/>
                <SgNullExpression/>
                <SgIntVal value="1"/>
              </SgSubscriptExpression>
            </SgArrayType>
        </SgInitializedName>
      </SgFunctionParameterList>
      <SgFunctionDefinition>
        <SgBasicBlock>
          <SgUseStatement name="glob"/>
          <SgVariableDeclaration>
            <SgInitializedName name="z">
                <SgArrayType index="" rank="1" type="SgTypeFloat">
                  <SgTypeFloat/>
                  <SgSubscriptExpression>
                    <SgNullExpression/>
                    <SgNullExpression/>
                    <SgIntVal value="1"/>
                  </SgSubscriptExpression>
                </SgArrayType>
            </SgInitializedName>
          </SgVariableDeclaration>
          <SgExprStatement>
            <SgFunctionCallExp>
              <SgFunctionRefExp subprogram_kind="2" symbol="sub"/>
              <SgExprListExp>
                <SgVarRefExp name="z"/>
              </SgExprListExp>
            </SgFunctionCallExp>
            <PreprocessingInfo pos="2" type="3">
!$acc data copy(z) copyin(x)
</PreprocessingInfo>
          </SgExprStatement>
          <PreprocessingInfo pos="4" type="3">
!$acc end data region
</PreprocessingInfo>
        </SgBasicBlock>
      </SgFunctionDefinition>
      <SgInitializedName name="roo">
          <SgTypeVoid/>
      </SgInitializedName>
    </SgProcedureHeaderStatement>
  </SgGlobal>

</SgSourceFile>